{
  "openapi": "3.0.1",
  "info": {
    "title": "HypeProxy.io API v.2.1",
    "description": "Official HypeProxy.io Public API - You should use a `JWT Token` than can also be used as `apikey` URL parameter.",
    "termsOfService": "https://hypeproxy.io/terms-of-service",
    "contact": {
      "name": "HypeProxy.io",
      "url": "https://hypeproxy.io/"
    },
    "license": {
      "name": "Read API Documentation",
      "url": "https://docs.hypeproxy.io"
    },
    "version": "2.1",
    "x-logo": {
      "url": "https://hypeproxy.io/images/iso.png",
      "altText": "The Logo"
    }
  },
  "paths": {
    "/v2/Authentication/SignIn": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login and Get Authentication JWT token",
        "requestBody": {
          "description": "Sign In Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SignInModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SignInModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Bays": {
      "get": {
        "tags": [
          "Bays"
        ],
        "summary": "Get all bays",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bay"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Bays/{bayId}": {
      "get": {
        "tags": [
          "Bays"
        ],
        "summary": "Get a specific bay",
        "parameters": [
          {
            "name": "bayId",
            "in": "path",
            "description": "Bay Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bay"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Coupons": {
      "get": {
        "tags": [
          "Coupons"
        ],
        "summary": "Get all coupons",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Coupons/{couponName}": {
      "get": {
        "tags": [
          "Coupons"
        ],
        "summary": "Get the coupon corresponding to the given name",
        "parameters": [
          {
            "name": "couponName",
            "in": "path",
            "description": "Coupon Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Credentials": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Get all user credentials",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Credentials/{credentialId}": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Get a specific credential from his Id",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "description": "Credential Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Update a specific credential from his Id",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "description": "Credential Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New Credentials Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetCredentialsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCredentialsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCredentialsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetCredentialsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Insight/Ping/{productDetailsId}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "Perform a ping request to the product",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Insight/Ip/{productDetailsId}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "Get the remote IP address",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Insight/IpDetails/{productDetailsId}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "Get more IP Information",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Insight/IpThreats/{productDetailsId}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "Get IP threats",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get all the user invoices",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Invoices/{invoiceId}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get a specific invoice with his Id",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get all locations",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "Optional: Get Locations for a desired Product Id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Locations/{locationId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "Location Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      }
    },
    "/v2/News": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get latest news",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/New"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/News/{newsId}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get a specific news",
        "parameters": [
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/New"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Orders/Validate": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Validate an order model and return if the order is possible or not",
        "requestBody": {
          "description": "Order Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Orders/Create": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order",
        "requestBody": {
          "description": "Order Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Orders/Extending/{purchaseId}": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Extending an existing purchase",
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Extending Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendingOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendingOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendingOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendingOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Orders/Update/{purchaseId}": {
      "patch": {
        "tags": [
          "Orders"
        ],
        "summary": "Update the purchase",
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update Order Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/ProductDetails": {
      "get": {
        "tags": [
          "ProductDetails"
        ],
        "summary": "Get all user product details",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "[Optional] You can filter by product type",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDetail"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/ProductDetails/{productDetailsId}": {
      "get": {
        "tags": [
          "ProductDetails"
        ],
        "summary": "Get a specific product detail",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetail"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a specific product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get profile information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUser"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Update profile information",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUser"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Purchases": {
      "get": {
        "tags": [
          "Purchases"
        ],
        "summary": "Get all the user purchases",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "[Optional] You can filter by product type",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Purchase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Purchases/{purchaseId}": {
      "get": {
        "tags": [
          "Purchases"
        ],
        "summary": "Get a specific purchase from his Id",
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Purchases"
        ],
        "summary": "Delete a specific purchase from his Id",
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Renews": {
      "get": {
        "tags": [
          "Renews"
        ],
        "summary": "Get all renews",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Renew"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/Renews/{productDetailsId}": {
      "get": {
        "tags": [
          "Renews"
        ],
        "summary": "Get the IP renew for a product",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Renew"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Renews"
        ],
        "summary": "Set a new IP renew delay",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "delay",
            "in": "query",
            "description": "The new delay (in minutes)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Renews"
        ],
        "summary": "Delete a specific renew",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Renews/Execute/{productDetailsId}": {
      "get": {
        "tags": [
          "Renews"
        ],
        "summary": "Execute a manual renew of the proxy IP",
        "parameters": [
          {
            "name": "productDetailsId",
            "in": "path",
            "description": "Product Details Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/TicketAnswers/{ticketId}": {
      "get": {
        "tags": [
          "TicketAnswers"
        ],
        "summary": "Get all ticket answers from a ticket Id",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketAnswer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TicketAnswers"
        ],
        "summary": "Post a new ticket answer",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Ticket Answer Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketAnswerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketAnswerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketAnswerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketAnswerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/TicketAnswers/{ticketId}/{ticketAnswerId}": {
      "get": {
        "tags": [
          "TicketAnswers"
        ],
        "summary": "Get a specific ticket answer from his Id",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ticketAnswerId",
            "in": "path",
            "description": "Ticket Answer Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/v2/Tickets": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get all the user tickets",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ticket"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Open a new Ticket",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/Tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a specific ticket from his Id",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Close a specific ticket from his Id",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "TicketId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationUser": {
        "type": "object",
        "properties": {
          "emailConfirmed": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "telegram": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "registrationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "hasBillingDetailsDefined": {
            "type": "boolean"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "isCompany": {
            "type": "boolean"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyIdentificationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyVatNumber": {
            "type": "string",
            "nullable": true
          },
          "cultureConcern": {
            "type": "string",
            "nullable": true
          },
          "securityFlag": {
            "type": "integer",
            "format": "int32"
          },
          "passwordSignature": {
            "type": "string",
            "nullable": true
          },
          "fingerprintId": {
            "type": "string",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean"
          },
          "hadFirstLogin": {
            "type": "boolean"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Bay": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "orchestratorUri": {
            "type": "string",
            "nullable": true
          },
          "orchestratorPassphrase": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingPeriod": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isOneTime": {
            "type": "boolean"
          },
          "isUsed": {
            "type": "boolean"
          },
          "percentOff": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Credential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "proxyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "isIpAuthenticationEnabled": {
            "type": "boolean"
          },
          "isHttpEnabled": {
            "type": "boolean"
          },
          "isSocksEnabled": {
            "type": "boolean"
          },
          "authorizedIp": {
            "pattern": "[0-9\\.]*",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtendingOrderModel": {
        "required": [
          "billingPeriod",
          "paymentMethod",
          "renewTime"
        ],
        "type": "object",
        "properties": {
          "billingPeriod": {
            "$ref": "#/components/schemas/BillingPeriod"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "renewTime": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "relatedPurchase": {
            "type": "string",
            "format": "uuid"
          },
          "couponId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "thirdPartyInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "finalAmount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "hostedInvoiceUrl": {
            "type": "string",
            "nullable": true
          },
          "hostedInvoicePdf": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "longName": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "flagPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "New": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "relatedUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewTicketAnswerModel": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NewTicketModel": {
        "required": [
          "message",
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/TicketPriority"
          }
        },
        "additionalProperties": false
      },
      "OrderModel": {
        "required": [
          "billingPeriod",
          "locationId",
          "paymentMethod",
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "locationId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "billingPeriod": {
            "$ref": "#/components/schemas/BillingPeriod"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "isAutoRenewed": {
            "type": "boolean"
          },
          "purchaseId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "couponCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethod": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "PingResponse": {
        "type": "object",
        "properties": {
          "isOperational": {
            "type": "boolean"
          },
          "reason": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "elapsedMilliseconds": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "tagline": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "longHtmlDescription": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "imagePath": {
            "type": "string",
            "nullable": true
          },
          "isAvailable": {
            "type": "boolean"
          },
          "isInMarketplace": {
            "type": "boolean"
          },
          "preHook": {
            "type": "string",
            "nullable": true
          },
          "postHook": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "bayId": {
            "type": "string",
            "format": "uuid"
          },
          "credentialsId": {
            "type": "string",
            "format": "uuid"
          },
          "remoteEndpoint": {
            "type": "string",
            "nullable": true
          },
          "remoteHostname": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "port2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAvailable": {
            "type": "boolean"
          },
          "isp": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "interface": {
            "type": "string",
            "nullable": true
          },
          "mainData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Purchase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/PurchaseStatus"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "billingPeriod": {
            "$ref": "#/components/schemas/BillingPeriod"
          },
          "relatedPaymentId": {
            "type": "string",
            "nullable": true
          },
          "couponId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isAutoRenewed": {
            "type": "boolean"
          },
          "isGracePeriod": {
            "type": "boolean"
          },
          "isTrial": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PurchaseStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "Renew": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "productDetailsId": {
            "type": "string",
            "format": "uuid"
          },
          "bayId": {
            "type": "string",
            "format": "uuid"
          },
          "eachTimeSpan": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "SetCredentialsModel": {
        "required": [
          "authorizedIp"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 21,
            "minLength": 3,
            "pattern": "[0-9a-zA-Z.\\-_]*",
            "type": "string",
            "nullable": true
          },
          "password": {
            "minLength": 6,
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "isIpAuthEnabled": {
            "type": "boolean"
          },
          "authorizedIp": {
            "pattern": "[0-9\\.,]*",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SignInModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "otpCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/TicketPriority"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "isClosed": {
            "type": "boolean"
          },
          "attachmentUri": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketAnswer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "isAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contextData": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "ticketId": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "attachmentUri": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketPriority": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateOrderModel": {
        "type": "object",
        "properties": {
          "updateType": {
            "$ref": "#/components/schemas/UpdateType"
          }
        },
        "additionalProperties": false
      },
      "UpdateType": {
        "enum": [
          0
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Specify the JWT token.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints, to login, signup and more."
    },
    {
      "name": "Invoices",
      "description": "Invoices endpoints"
    },
    {
      "name": "Profile",
      "description": "Profile endpoints, get and update your profile."
    },
    {
      "name": "TicketAnswers",
      "description": "Ticket answers endpoints"
    },
    {
      "name": "Tickets",
      "description": "Tickets endpoints"
    },
    {
      "name": "Bays",
      "description": "[Generic Data] Bays endpoints, get information about ou Bays."
    },
    {
      "name": "Locations",
      "description": "Locations of our Bays"
    },
    {
      "name": "News",
      "description": "News endpoint, get the latest HypeProxy.io news."
    },
    {
      "name": "Products",
      "description": "Products endpoints, it's all the differents kind of products we provide."
    },
    {
      "name": "Credentials",
      "description": "[Warning] This endpoints will help you to get your proxies credentials"
    },
    {
      "name": "Insight",
      "description": "Deeply inspect your products"
    },
    {
      "name": "ProductDetails",
      "description": "Product Details endpoints"
    },
    {
      "name": "Purchases",
      "description": "Purchases endpoints."
    },
    {
      "name": "Renews",
      "description": "IP Renew endpoints."
    }
  ]
}